name: Deploy New Feature to EKS
on:
  workflow_dispatch: # Manual trigger for rollback 
permissions:
  actions: write # Ensure permission to upload artifacts
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Image Tag
        id: set-image-tag
        run: echo "IMAGE_TAG=$(echo ${{ github.sha }})" >> $GITHUB_ENV

      - name: Build, Tag, and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Create or update previous_image_tag.txt
          echo "PREVIOUS_IMAGE_TAG=$(cat previous_image_tag.txt 2>/dev/null || echo 'latest')" > previous_image_tag.txt
          echo $IMAGE_TAG >> previous_image_tag.txt

      - name: Debug Image Tag File
        run: |
          echo "Contents of previous_image_tag.txt:"
          cat previous_image_tag.txt || echo "File not found"

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          mkdir -p ~/.kube
          echo $KUBE_CONFIG_DATA | base64 -d > ~/.kube/config
          sed -i "s|<ECR_REGISTRY>/<ECR_REPOSITORY>:<IMAGE_TAG>|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" k8s/deployment.yaml
          # Enable feature toggle for Customer B (set to true for new feature)
          sed -i 's/value: "false"/value: "true"/g' k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/eks-app

      - name: Store Image Tag for Rollback
        uses: actions/upload-artifact@v4
        with:
          name: image-tags
          path: previous_image_tag.txt
          retention-days: 7 # Retain artifact for 7 days
