name: Rollback to Default Feature
on:
  workflow_dispatch: # Manual trigger for rollback
permissions:
  actions: read # Ensure permission to download artifacts
  contents: read
jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Download Previous Image Tag
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: image-tags
      #     path: downloaded-artifact
      #   continue-on-error: true

      - name: 'Download artifact from latest build'
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: deploy_default_feature.yaml
          name: image-tags
          path: downloaded-artifact

      - name: Verify Artifact Download
        run: |
          if [ -f "downloaded-artifact/previous_image_tag.txt" ]; then
            echo "Artifact downloaded successfully. Contents:"
            cat downloaded-artifact/previous_image_tag.txt
          else
            echo "Error: Artifact 'image-tags' not found or download failed"
            echo "Possible causes:"
            echo "- Deploy workflow failed to upload artifact"
            echo "- Artifact expired (retention period: 7 days)"
            echo "- Incompatible artifact version"
            exit 1
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Deploy Previous Version to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          PREVIOUS_IMAGE_TAG=$(head -n 1 downloaded-artifact/previous_image_tag.txt)
          if [ -z "$PREVIOUS_IMAGE_TAG" ]; then
            echo "Error: No previous image tag found in previous_image_tag.txt"
            exit 1
          fi
          mkdir -p ~/.kube
          echo $KUBE_CONFIG_DATA | base64 -d > ~/.kube/config
          sed -i "s|<ECR_REGISTRY>/<ECR_REPOSITORY>:<IMAGE_TAG>|$ECR_REGISTRY/$ECR_REPOSITORY:$PREVIOUS_IMAGE_TAG|g" k8s/deployment.yaml
          # Disable feature toggle for rollback
          sed -i 's/value: "true"/value: "false"/g' k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/eks-app